<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Melody</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://daihuanqi.github.io/"/>
  <updated>2018-01-07T09:40:19.000Z</updated>
  <id>https://daihuanqi.github.io/</id>
  
  <author>
    <name>Melody</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>简单哈希查找的实现</title>
    <link href="https://daihuanqi.github.io/2018/01/07/%E5%93%88%E5%B8%8C%E6%9F%A5%E6%89%BE%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>https://daihuanqi.github.io/2018/01/07/哈希查找的实现/</id>
    <published>2018-01-07T08:32:54.000Z</published>
    <updated>2018-01-07T09:40:19.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;今天我一时兴起，打算重新看一下哈希查找算法的实现。因为平时用的太多hashTable了，如果连实现原理都不知道，实在是说不过去。&lt;br&gt;废话不说，开始干货！&lt;br&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://daihuanqi.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="哈希查找" scheme="https://daihuanqi.github.io/tags/%E5%93%88%E5%B8%8C%E6%9F%A5%E6%89%BE/"/>
    
      <category term="算法" scheme="https://daihuanqi.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="C语言" scheme="https://daihuanqi.github.io/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Predis的坑</title>
    <link href="https://daihuanqi.github.io/2017/11/12/Predis%E7%9A%84%E5%9D%91/"/>
    <id>https://daihuanqi.github.io/2017/11/12/Predis的坑/</id>
    <published>2017-11-12T08:53:54.000Z</published>
    <updated>2017-11-12T09:19:50.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;过去一周我们公司的Redis一直收到报错信息。 于是乎我就上了我们线上服务器查了下错误日志。清一色都是显示Predis链接超时。&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="https://daihuanqi.github.io/categories/PHP/"/>
    
    
      <category term="redis" scheme="https://daihuanqi.github.io/tags/redis/"/>
    
      <category term="Predis" scheme="https://daihuanqi.github.io/tags/Predis/"/>
    
      <category term="PHP" scheme="https://daihuanqi.github.io/tags/PHP/"/>
    
      <category term="NoSQL" scheme="https://daihuanqi.github.io/tags/NoSQL/"/>
    
  </entry>
  
  <entry>
    <title>汉明距离</title>
    <link href="https://daihuanqi.github.io/2017/11/12/%E6%B1%89%E6%98%8E%E8%B7%9D%E7%A6%BB/"/>
    <id>https://daihuanqi.github.io/2017/11/12/汉明距离/</id>
    <published>2017-11-12T03:15:05.000Z</published>
    <updated>2017-11-12T08:49:30.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;今天看到了一道算法题，叫汉明距离（音译吧）。一开始我是懵逼的，后来复习了一下计算机的一些基础之后就做出来了，我觉得有必要记录一下。&lt;br&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://daihuanqi.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="https://daihuanqi.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="位运算" scheme="https://daihuanqi.github.io/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
      <category term="二进制" scheme="https://daihuanqi.github.io/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6/"/>
    
      <category term="算法题" scheme="https://daihuanqi.github.io/tags/%E7%AE%97%E6%B3%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>计算机的位运算</title>
    <link href="https://daihuanqi.github.io/2017/11/12/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    <id>https://daihuanqi.github.io/2017/11/12/计算机的位运算/</id>
    <published>2017-11-12T03:15:05.000Z</published>
    <updated>2017-11-12T04:37:27.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近复习了一下计算机的位运算符，我觉得有必要写下来记录一下。在说位运算之前，我们先来复习一下计算机的编码&lt;br&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://daihuanqi.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="https://daihuanqi.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="位运算" scheme="https://daihuanqi.github.io/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
      <category term="二进制" scheme="https://daihuanqi.github.io/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>php单一入口和多入口模式详细讲解</title>
    <link href="https://daihuanqi.github.io/2017/08/19/php%E5%8D%95%E4%B8%80%E5%85%A5%E5%8F%A3%E5%92%8C%E5%A4%9A%E5%85%A5%E5%8F%A3%E6%A8%A1%E5%BC%8F%E8%AF%A6%E7%BB%86%E8%AE%B2%E8%A7%A3/"/>
    <id>https://daihuanqi.github.io/2017/08/19/php单一入口和多入口模式详细讲解/</id>
    <published>2017-08-19T03:52:18.000Z</published>
    <updated>2017-08-19T03:59:56.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;原文出处：&lt;a href=&quot;http://www.smsyun.com/home-index-page-id-220.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.smsyun.com/home-index-page-id-220.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;php单一入口模式可谓是现在一种比较流行的大型web应用开发模式，比如当前比较流行的一些php开发框架，zend，thinkphp，qeephp，还有cakephp 等他们都是采用的单一入口模式的。本文将就什么是单一入口模式，单一入口模式有哪些优点以缺点做一下研究。&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="https://daihuanqi.github.io/categories/PHP/"/>
    
    
      <category term="单一入口" scheme="https://daihuanqi.github.io/tags/%E5%8D%95%E4%B8%80%E5%85%A5%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>关于PHP错误日志踩过的一些坑</title>
    <link href="https://daihuanqi.github.io/2017/08/19/%E5%85%B3%E4%BA%8EPHP%E9%94%99%E8%AF%AF%E6%97%A5%E5%BF%97%E8%B8%A9%E8%BF%87%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/"/>
    <id>https://daihuanqi.github.io/2017/08/19/关于PHP错误日志踩过的一些坑/</id>
    <published>2017-08-19T03:41:04.000Z</published>
    <updated>2017-08-19T03:43:05.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;对于线上的项目来说，错误日志和访问日志是至关重要的。学会如何分析日志找出问题是一个必备技能。本文就谈谈关于PHP的错误日志那些事。&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="https://daihuanqi.github.io/categories/PHP/"/>
    
    
      <category term="log" scheme="https://daihuanqi.github.io/tags/log/"/>
    
      <category term="php" scheme="https://daihuanqi.github.io/tags/php/"/>
    
      <category term="error" scheme="https://daihuanqi.github.io/tags/error/"/>
    
  </entry>
  
  <entry>
    <title>MySQL索引原理及慢查询优化</title>
    <link href="https://daihuanqi.github.io/2017/08/19/MySQL%E7%B4%A2%E5%BC%95%E5%8E%9F%E7%90%86%E5%8F%8A%E6%85%A2%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96/"/>
    <id>https://daihuanqi.github.io/2017/08/19/MySQL索引原理及慢查询优化/</id>
    <published>2017-08-19T02:55:18.000Z</published>
    <updated>2017-08-19T03:17:15.000Z</updated>
    
    <summary type="html">
    
      &lt;h5 id=&quot;MySQL索引原理&quot;&gt;&lt;a href=&quot;#MySQL索引原理&quot; class=&quot;headerlink&quot; title=&quot;MySQL索引原理&quot;&gt;&lt;/a&gt;MySQL索引原理&lt;/h5&gt;&lt;h6 id=&quot;索引目的&quot;&gt;&lt;a href=&quot;#索引目的&quot; class=&quot;headerlink&quot; title=&quot;索引目的&quot;&gt;&lt;/a&gt;索引目的&lt;/h6&gt;&lt;p&gt;索引的目的在于提高查询效率，可以类比字典，如果要查“mysql”这个单词，我们肯定需要定位到m字母，然后从下往下找到y字母，再找到剩下的sql。如果没有索引，那么你可能需要把所有单词看一遍才能找到你想要的，如果我想找到m开头的单词呢？或者ze开头的单词呢？是不是觉得如果没有索引，这个事情根本无法完成？&lt;br&gt;
    
    </summary>
    
      <category term="Mysql" scheme="https://daihuanqi.github.io/categories/Mysql/"/>
    
    
      <category term="Mysql" scheme="https://daihuanqi.github.io/tags/Mysql/"/>
    
      <category term="索引" scheme="https://daihuanqi.github.io/tags/%E7%B4%A2%E5%BC%95/"/>
    
      <category term="优化" scheme="https://daihuanqi.github.io/tags/%E4%BC%98%E5%8C%96/"/>
    
      <category term="b+tree" scheme="https://daihuanqi.github.io/tags/b-tree/"/>
    
  </entry>
  
  <entry>
    <title>风趣理解阻塞非阻塞与同步异步的区别</title>
    <link href="https://daihuanqi.github.io/2017/08/19/%E9%A3%8E%E8%B6%A3%E7%90%86%E8%A7%A3%E9%98%BB%E5%A1%9E%E9%9D%9E%E9%98%BB%E5%A1%9E%E4%B8%8E%E5%90%8C%E6%AD%A5%E5%BC%82%E6%AD%A5%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>https://daihuanqi.github.io/2017/08/19/风趣理解阻塞非阻塞与同步异步的区别/</id>
    <published>2017-08-19T02:48:18.000Z</published>
    <updated>2017-08-19T02:51:56.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;老张爱喝茶，废话不说，煮开水。&lt;br&gt;出场人物：老张，水壶两把（普通水壶，简称水壶；会响的水壶，简称响水壶）。&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="https://daihuanqi.github.io/categories/PHP/"/>
    
    
      <category term="同步异步" scheme="https://daihuanqi.github.io/tags/%E5%90%8C%E6%AD%A5%E5%BC%82%E6%AD%A5/"/>
    
      <category term="阻塞非阻塞" scheme="https://daihuanqi.github.io/tags/%E9%98%BB%E5%A1%9E%E9%9D%9E%E9%98%BB%E5%A1%9E/"/>
    
      <category term="I/O" scheme="https://daihuanqi.github.io/tags/I-O/"/>
    
  </entry>
  
  <entry>
    <title>Netstat 简介</title>
    <link href="https://daihuanqi.github.io/2017/08/16/netstat/"/>
    <id>https://daihuanqi.github.io/2017/08/16/netstat/</id>
    <published>2017-08-16T06:38:20.000Z</published>
    <updated>2017-08-19T01:17:45.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Netstat 是一款命令行工具，可用于列出系统上所有的网络套接字连接情况，包括 tcp, udp 以及 unix 套接字，另外它还能列出处于监听状态（即等待接入请求）的套接字。如果你想确认系统上的 Web 服务有没有起来，你可以查看80端口有没有打开。以上功能使 netstat 成为网管和系统管理员的必备利器。在这篇教程中，我会列出几个例子，教大家如何使用 netstat 去查找网络连接信息和系统开启的端口号。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://daihuanqi.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://daihuanqi.github.io/tags/Linux/"/>
    
      <category term="Netstat" scheme="https://daihuanqi.github.io/tags/Netstat/"/>
    
      <category term="Network" scheme="https://daihuanqi.github.io/tags/Network/"/>
    
      <category term="监控" scheme="https://daihuanqi.github.io/tags/%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
</feed>
